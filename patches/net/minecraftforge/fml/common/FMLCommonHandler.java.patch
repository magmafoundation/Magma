--- ../src-base/minecraft/net/minecraftforge/fml/common/FMLCommonHandler.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/FMLCommonHandler.java
@@ -38,6 +38,7 @@
 import java.util.concurrent.FutureTask;
 import java.util.concurrent.TimeUnit;
 
+import com.mojang.authlib.properties.Property;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.item.EntityItem;
@@ -58,6 +59,7 @@
 import net.minecraft.world.storage.SaveHandler;
 import net.minecraft.world.storage.WorldInfo;
 import net.minecraftforge.client.model.animation.Animation;
+import net.minecraftforge.common.DimensionManager;
 import net.minecraftforge.common.ForgeVersion;
 import net.minecraftforge.common.MinecraftForge;
 import net.minecraftforge.common.util.CompoundDataFixer;
@@ -83,6 +85,8 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
 import com.google.common.collect.Maps;
+import org.bukkit.ChatColor;
+import org.magmafoundation.magma.configuration.MagmaConfig;
 
 import javax.annotation.Nullable;
 
@@ -385,6 +389,10 @@
 
     public void handleWorldDataSave(SaveHandler handler, WorldInfo worldInfo, NBTTagCompound tagCompound)
     {
+        if (worldInfo.getDimension() != 0)
+        {
+            return;
+        }
         for (ModContainer mc : Loader.instance().getModList())
         {
             if (mc instanceof InjectedModContainer)
@@ -405,7 +413,7 @@
         {
             return;
         }
-        if (handlerSet.contains(handler))
+        if (handlerSet.contains(handler) || DimensionManager.getWorld(0) != null)
         {
             return;
         }
@@ -507,7 +515,7 @@
         MinecraftServer server = getMinecraftServerInstance();
         Loader.instance().serverStopped();
         // FORCE the internal server to stop: hello optifine workaround!
-        if (server!=null) ObfuscationReflectionHelper.setPrivateValue(MinecraftServer.class, server, false, "field_71316"+"_v");
+        if (server!=null) ObfuscationReflectionHelper.setPrivateValue(MinecraftServer.class, server, false, "field_71316"+"_v", "u", "serverStopped");
 
         // allow any pending exit to continue, clear exitLatch
         CountDownLatch latch = exitLatch;
@@ -642,7 +650,7 @@
         if (packet.getRequestedState() == EnumConnectionState.LOGIN && (!NetworkRegistry.INSTANCE.isVanillaAccepted(Side.CLIENT) && !packet.hasFMLMarker()))
         {
             manager.setConnectionState(EnumConnectionState.LOGIN);
-            TextComponentString text = new TextComponentString("This server has mods that require FML/Forge to be installed on the client. Contact your server admin for more details.");
+            TextComponentString text = new TextComponentString(ChatColor.translateAlternateColorCodes('&', MagmaConfig.instance.fmlRequiredMessage.getValues())); // Magma
             Collection<String> modNames = NetworkRegistry.INSTANCE.getRequiredMods(Side.CLIENT);
             FMLLog.log.info("Disconnecting Player: This server has mods that require FML/Forge to be installed on the client: {}", modNames);
             manager.sendPacket(new SPacketDisconnect(text));
